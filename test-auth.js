// Arquivo de teste para verificar se a autentica√ß√£o est√° funcionando
// Execute: node test-auth.js

const BASE_URL = 'http://localhost:3001';

async function testAPI() {
  console.log('üß™ Testando API de Autentica√ß√£o...\n');

  try {
    // 1. Testar health check
    console.log('1Ô∏è‚É£ Testando health check...');
    const healthResponse = await fetch(`${BASE_URL}/health`);
    const healthData = await healthResponse.json();
    console.log('‚úÖ Health:', healthData);
    console.log('');

    // 2. Testar signup
    console.log('2Ô∏è‚É£ Testando signup...');
    const signupData = {
      email: `teste.${Date.now()}@example.com`,
      password: 'minhasenha123',
      nome: 'Usu√°rio Teste',
      telefone: '11999999999'
    };

    const signupResponse = await fetch(`${BASE_URL}/auth/signup`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(signupData),
    });

    const signupResult = await signupResponse.json();
    console.log('üìù Signup response:', signupResult);

    if (!signupResponse.ok) {
      console.log('‚ùå Signup falhou:', signupResult);
      return;
    }

    console.log('‚úÖ Signup realizado com sucesso!');
    console.log('üìß Verifique o email para confirmar a conta antes de fazer login.');
    console.log('');

    // 3. Testar signin (provavelmente falhar√° se email n√£o foi confirmado)
    console.log('3Ô∏è‚É£ Testando signin...');
    const signinResponse = await fetch(`${BASE_URL}/auth/signin`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        email: signupData.email,
        password: signupData.password,
      }),
    });

    const signinResult = await signinResponse.json();
    console.log('üîë Signin response:', signinResult);

    if (signinResponse.ok && signinResult.access_token) {
      console.log('‚úÖ Login realizado com sucesso!');
      console.log('üé´ Token de acesso:', signinResult.access_token.substring(0, 50) + '...');
      
      // 4. Testar endpoint protegido
      console.log('');
      console.log('4Ô∏è‚É£ Testando endpoint protegido...');
      const profileResponse = await fetch(`${BASE_URL}/usuarios/me`, {
        headers: {
          'Authorization': `Bearer ${signinResult.access_token}`,
        },
      });

      const profileResult = await profileResponse.json();
      console.log('üë§ Profile response:', profileResult);

    } else {
      console.log('‚ùå Login falhou (prov√°vel: email n√£o confirmado):', signinResult);
      console.log('üí° Para testar completamente, confirme o email e execute novamente.');
    }

  } catch (error) {
    console.error('üí• Erro durante os testes:', error.message);
  }
}

// Executar testes
testAPI();
