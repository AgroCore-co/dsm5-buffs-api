# =======================================================
#    BUFFS API - Variáveis de Ambiente Essenciais
# =======================================================
#
# 📋 INSTRUÇÕES:
# 1. Copie este arquivo para .env (desenvolvimento) ou configure no AWS App Runner (produção)
# 2. Preencha com seus valores reais
# 3. ⚠️  NUNCA envie o arquivo .env para o repositório Git
# 4. Para produção, use as variáveis de ambiente do seu serviço de cloud
# -------------------------------------------------------


# ========================================
# 🗄️  CONFIGURAÇÃO DO SUPABASE (OBRIGATÓRIO)
# ========================================
# 
# 📍 Como obter estas informações:
# 1. Acesse: https://supabase.com/dashboard/
# 2. Selecione seu projeto
# 3. Vá em: Settings > API
# 4. Copie as informações abaixo

# URL base do seu projeto Supabase
SUPABASE_URL="https://your-project-id.supabase.co"

# Chave pública (anon key) - usada pelo frontend e backend
SUPABASE_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.your-anon-key"

# JWT Secret - usado para verificar tokens de acesso (Settings > API > JWT Settings)
SUPABASE_JWT_SECRET="your-jwt-secret-key-here"


# ========================================
# 🤖 INTEGRAÇÃO COM GOOGLE GEMINI AI
# ========================================
#
# 📍 Como obter a chave da API:
# 1. Acesse: https://makersuite.google.com/app/apikey
# 2. Crie uma nova API key
# 3. Cole abaixo (mantém as aspas)

GEMINI_API_KEY="AIzaSy..."


# ========================================
# 🌐 CONFIGURAÇÃO DA APLICAÇÃO
# ========================================

# 🚢 Porta da aplicação
# - Desenvolvimento: 3001 
# - AWS App Runner: usa PORT automaticamente
PORT=3001

# 🏷️  Ambiente de execução
# - "development" para local
# - "production" para deploy em nuvem
NODE_ENV="development"

# 📊 Nível de logs (opcional)
# - "debug" | "info" | "warn" | "error"
LOG_LEVEL="info"


# ========================================
# 🔒 CONFIGURAÇÃO DE SEGURANÇA (CORS)
# ========================================
#
# 🌍 Domínios autorizados a acessar sua API
# Separe múltiplos domínios com vírgula (sem espaços)
#
# 🏠 Exemplos para desenvolvimento:
CORS_ORIGIN="http://localhost:3000,http://localhost:5173,http://127.0.0.1:3000"
#
# ☁️  Exemplos para produção:
# CORS_ORIGIN="https://meu-app.vercel.app,https://app.meudominio.com"


# ========================================
# 🔧 INTEGRAÇÕES OPCIONAIS
# ========================================

# 🧠 API de Inteligência Artificial (se houver)
IA_API_URL="http://localhost:5001"


# ========================================
# ⚡ OTIMIZAÇÕES PARA AWS APP RUNNER
# ========================================
# 
# 🎛️  Configurações de performance (opcional)
# Limite de memória do Node.js em MB (recomendado: 1024-1536 para free tier)
# NODE_OPTIONS="--max-old-space-size=1024"
#
# 🔄 Pool de threads para I/O (recomendado: 4 para free tier)
# UV_THREADPOOL_SIZE=4


# ========================================
# 📚 DOCUMENTAÇÃO ADICIONAL
# ========================================
#
# 🔗 Links úteis:
# - Supabase Docs: https://supabase.com/docs
# - NestJS Docs: https://docs.nestjs.com
# - AWS App Runner: https://aws.amazon.com/apprunner/
#
# ❓ Precisa de ajuda?
# - Verifique se todas as variáveis obrigatórias estão preenchidas
# - Teste a conexão com Supabase no dashboard
# - Confirme se o CORS inclui o domínio do seu frontend